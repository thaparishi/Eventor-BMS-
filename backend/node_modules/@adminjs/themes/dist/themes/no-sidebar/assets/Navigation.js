import { Box, Button, DropDown, DropDownItem, DropDownMenu, DropDownTrigger, Icon } from '@adminjs/design-system';
import { useNavigationResources } from 'adminjs';
import React, { useCallback } from 'react';
import { useSelector } from 'react-redux';
import { useLocation } from 'react-router';
const NavigationComponent = () => {
  const resources = useSelector(state => state.resources);
  const {
    pathname
  } = useLocation();
  const navigatonElements = useNavigationResources(resources);
  const isSelected = useCallback(({
    href,
    elements
  }) => href ? href === pathname : elements?.map(e => e.href).includes(pathname), [pathname]);
  return /*#__PURE__*/React.createElement(Box, {
    as: "nav",
    flex: true,
    alignItems: "center"
  }, navigatonElements.map(element => /*#__PURE__*/React.createElement(DropDown, {
    key: element.label
  }, /*#__PURE__*/React.createElement(DropDownTrigger, null, /*#__PURE__*/React.createElement(Button, {
    color: isSelected(element) ? 'primary' : 'text'
  }, /*#__PURE__*/React.createElement(Icon, {
    icon: element.icon
  }), element.label)), /*#__PURE__*/React.createElement(DropDownMenu, null, element.elements?.map(nested => /*#__PURE__*/React.createElement(NavigationElement, {
    key: nested.href,
    element: nested
  }))))));
};
const NavigationElement = ({
  element: {
    href,
    label,
    icon,
    elements
  }
}) => /*#__PURE__*/React.createElement(DropDownItem, {
  as: "a",
  href: href
}, icon && /*#__PURE__*/React.createElement(Icon, {
  icon: icon
}), label, elements?.length ? /*#__PURE__*/React.createElement(DropDownMenu, null, elements.map(nested => /*#__PURE__*/React.createElement(NavigationElement, {
  key: nested.href,
  element: nested
}))) : null);
export const Navigation = /*#__PURE__*/React.memo(NavigationComponent);